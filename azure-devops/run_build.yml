# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

jobs:
- job: ${{ parameters.targetPlatform }}
  pool:
    name: STL
    demands: Agent.OSArchitecture -equals x64
  variables:
    vcpkgLocation: '$(Build.SourcesDirectory)/vcpkg'
  steps:
    - checkout: self
      submodules: recursive
    - task: PowerShell@2
      displayName: 'Install MSVC Preview'
      timeoutInMinutes: 30
      # on "Hosted" agents only:
      condition: or(contains(variables['Agent.Name'], 'Azure Pipelines'), contains(variables['Agent.Name'], 'Hosted Agent'))
      inputs:
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/azure-devops/install_msvc_preview.ps1
    - task: Cache@2
      displayName: Cache vcpkg
      timeoutInMinutes: 10
      inputs:
        key: '"${{ parameters.targetPlatform}}" | $(Build.SourcesDirectory)/.git/modules/vcpkg/HEAD'
        path: '$(vcpkgLocation)'
    - task: run-vcpkg@0
      displayName: 'Run vcpkg to Install boost-build'
      timeoutInMinutes: 10
      inputs:
        vcpkgArguments: 'boost-build:x86-windows'
        vcpkgDirectory: '$(vcpkgLocation)'
    - task: run-vcpkg@0
      displayName: 'Run vcpkg'
      timeoutInMinutes: 10
      inputs:
        vcpkgArguments: 'boost-math:${{ parameters.targetPlatform }}-windows'
        vcpkgDirectory: '$(vcpkgLocation)'
        vcpkgTriplet: ${{ parameters.targetPlatform }}-windows
    - task: run-cmake@0
      displayName: 'Build Support Tools'
      timeoutInMinutes: 2
      condition: eq('${{ parameters.targetPlatform }}', 'x64')
      inputs:
        cmakeListsTxtPath: 'tools/CMakeSettings.json'
        useVcpkgToolchainFile: true
        configurationRegexFilter: '.*x64-Release.*'
        buildDirectory: $(Build.ArtifactStagingDirectory)/tools
    - task: BatchScript@1
      displayName: 'Enforce clang-format'
      timeoutInMinutes: 60
      condition: eq('${{ parameters.targetPlatform }}', 'x64')
      inputs:
        filename: 'azure-devops/enforce-clang-format.cmd'
        failOnStandardError: true
        arguments: '$(Build.ArtifactStagingDirectory)/tools/parallelize/parallelize.exe'
    - task: BatchScript@1
      displayName: 'Validate Files'
      timeoutInMinutes: 2
      condition: eq('${{ parameters.targetPlatform }}', 'x64')
      inputs:
        filename: 'azure-devops/validate-files.cmd'
        failOnStandardError: true
        arguments: '$(Build.ArtifactStagingDirectory)/tools/validate/validate.exe'
    - task: run-cmake@0
      displayName: 'Build the STL'
      timeoutInMinutes: 10
      inputs:
        cmakeListsTxtPath: 'CMakeSettings.json'
        useVcpkgToolchainFile: true
        configurationRegexFilter: '.*${{ parameters.targetPlatform }}.*'
        buildDirectory: $(Build.ArtifactStagingDirectory)/${{ parameters.targetPlatform }}
    - task: PublishPipelineArtifact@1
      condition: in('${{ parameters.targetPlatform }}', 'arm', 'arm64')
      inputs:
        path: $(Build.ArtifactStagingDirectory)/${{ parameters.targetPlatform }}
        artifact: ${{ parameters.targetPlatform }}-STL
- job: test-${{ parameters.targetPlatform }}
  dependsOn: ${{ parameters.targetPlatform }}
  condition: and(succeeded(), in('{{ parameters.targetPlatform }}', 'arm', 'arm64'))
  pool:
    name: STL
    #demands: Agent.OSArchitecture -equals ARM64
  steps:
  - task: Bash@3
    inputs:
      script: echo "Hello"
