# *** C1XX COMPILER BUGS ***
# Compiler bug: VSO-120957 "alignas by-value parameters should be permitted"
utilities\meta\meta.trans\meta.trans.other\aligned_storage.pass.cpp FAIL


# *** CLANG COMPILER BUGS ***
# LLVM-33230 "Clang on Windows should define __STDCPP_THREADS__ to be 1"
thread\macro.pass.cpp.1 FAIL


# Compiler bug: VSO-106654 "error C2580 "multiple versions of a defaulted special member functions are not allowed" is bogus and ungrammatical"
utilities\tuple\tuple.tuple\tuple.cnstr\test_lazy_sfinae.pass.cpp.0 FAIL

# Compiler bug: VSO-406936 "is_constructible<int&&, double&> and is_constructible<const int&, ExplicitTo<int&&>> should be true"
utilities\meta\meta.unary\meta.unary.prop\is_constructible.pass.cpp.0 FAIL

# *** CLANG COMPILER BUGS ***
# LLVM-33230 "Clang on Windows should define __STDCPP_THREADS__ to be 1"
thread\macro.pass.cpp FAIL


# *** STL BUGS ***
# STL bug: VSO-121977 "<locale>: the enum value of std::money_base is not correct[libcxx]"
localization\locale.categories\category.monetary\locale.moneypunct\money_base.pass.cpp FAIL

# STL Bug: VSO-595631 <fstream> basic_filebuf doesn't comply with setbuf(0,0) requirement in the standard
input.output\file.streams\fstreams\filebuf.virtuals\overflow.pass.cpp FAIL
input.output\file.streams\fstreams\filebuf.virtuals\underflow.pass.cpp FAIL

# STL bug: Our tgmath.h just includes <ctgmath>
depr\depr.c.headers\tgmath_h.pass.cpp.1 FAIL

# STL bug: Our inheritance implementation is allowing this to compile when it shouldn't.
numerics\complex.number\complex.special\double_long_double_implicit.fail.cpp FAIL
numerics\complex.number\complex.special\float_double_implicit.fail.cpp FAIL
numerics\complex.number\complex.special\float_long_double_implicit.fail.cpp FAIL

# STL bug: regex_traits::transform() isn't following the Standard.
re\re.traits\transform.pass.cpp FAIL

# STL bug: Incorrect return types.
numerics\complex.number\cmplx.over\conj.pass.cpp FAIL
numerics\complex.number\cmplx.over\pow.pass.cpp FAIL
numerics\complex.number\cmplx.over\proj.pass.cpp FAIL

# STL bug: Missing <valarray> assignment operators.
numerics\numarray\template.mask.array\mask.array.assign\mask_array.pass.cpp FAIL
numerics\numarray\template.slice.array\slice.arr.assign\slice_array.pass.cpp FAIL

# STL bug: We allow fill() and swap() for array<const T, 0>.
containers\sequences\array\array.fill\fill.fail.cpp FAIL
containers\sequences\array\array.swap\swap.fail.cpp FAIL

# STL bug: VSO-207715 We reject array<NoDefault, 0>.
containers\sequences\array\array.cons\default.pass.cpp FAIL
containers\sequences\array\array.cons\implicit_copy.pass.cpp FAIL
containers\sequences\array\array.data\data_const.pass.cpp FAIL
containers\sequences\array\array.data\data.pass.cpp FAIL
containers\sequences\array\begin.pass.cpp FAIL

# Predicate count assertions - IDL2 is slightly bending the Standard's rules here.
algorithms\alg.sorting\alg.heap.operations\make.heap\make_heap_comp.pass.cpp FAIL
algorithms\alg.sorting\alg.merge\inplace_merge_comp.pass.cpp FAIL
algorithms\alg.sorting\alg.min.max\minmax_init_list_comp.pass.cpp FAIL

# STL bug: We don't match strtod / strtof when doing field extraction for hexfloats, or special cases like inf
localization\locale.categories\category.numeric\locale.num.get\facet.num.get.members\get_double.pass.cpp FAIL
localization\locale.categories\category.numeric\locale.num.get\facet.num.get.members\get_float.pass.cpp FAIL
localization\locale.categories\category.numeric\locale.num.get\facet.num.get.members\get_long_double.pass.cpp FAIL

# STL bug: We don't match numpunct groups correctly in do_get
localization\locale.categories\category.numeric\locale.num.get\facet.num.get.members\get_long.pass.cpp FAIL

# STL test bug: We don't have the locale names libcxx wants specialized in platform_support.hpp
# More bugs may be uncovered when the locale names are present.
input.output\iostreams.base\ios\basic.ios.members\move.pass.cpp FAIL
localization\locale.categories\category.collate\locale.collate.byname\compare.pass.cpp FAIL
localization\locale.categories\category.ctype\locale.ctype.byname\is_1.pass.cpp FAIL
localization\locale.categories\category.ctype\locale.ctype.byname\is_many.pass.cpp FAIL
localization\locale.categories\category.ctype\locale.ctype.byname\narrow_1.pass.cpp FAIL
localization\locale.categories\category.ctype\locale.ctype.byname\narrow_many.pass.cpp FAIL
localization\locale.categories\category.ctype\locale.ctype.byname\scan_is.pass.cpp FAIL
localization\locale.categories\category.ctype\locale.ctype.byname\scan_not.pass.cpp FAIL
localization\locale.categories\category.ctype\locale.ctype.byname\widen_1.pass.cpp FAIL
localization\locale.categories\category.ctype\locale.ctype.byname\widen_many.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.moneypunct.byname\curr_symbol.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.moneypunct.byname\decimal_point.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.moneypunct.byname\grouping.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.moneypunct.byname\neg_format.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.moneypunct.byname\negative_sign.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.moneypunct.byname\pos_format.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.moneypunct.byname\thousands_sep.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.get.byname\get_date.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.get.byname\get_date_wide.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.get.byname\get_monthname.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.get.byname\get_monthname_wide.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.get.byname\get_one.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.get.byname\get_one_wide.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.get.byname\get_weekday.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.get.byname\get_weekday_wide.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.put.byname\put1.pass.cpp FAIL
localization\locale.categories\facet.numpunct\locale.numpunct.byname\grouping.pass.cpp FAIL
localization\locale.categories\facet.numpunct\locale.numpunct.byname\thousands_sep.pass.cpp FAIL

# STL Bug? Our wbuffer_convert does not implement seek. [depr.conversions.buffer] is completely underspecified.
localization\locales\locale.convenience\conversions\conversions.buffer\seekoff.pass.cpp FAIL

# STL Bug: We aren't properly SFINAEing chrono operators
# https://github.com/llvm/llvm-project/commit/efa6d803c624f9251d0ab7881122501bb9d27368
utilities\time\time.duration\time.duration.nonmember\op_divide_rep.pass.cpp FAIL
utilities\time\time.duration\time.duration.nonmember\op_mod_rep.pass.cpp FAIL

# STL Bug: error_category's default ctor isn't constexpr. (Should be fixed in vNext.)
diagnostics\syserr\syserr.errcat\syserr.errcat.nonvirtuals\default_ctor.pass.cpp.1 FAIL

# STL Bug: future incorrectly uses copy assignment instead of copy construction in set_value. (Should be fixed in vNext.)
thread\futures\futures.promise\set_value_const.pass.cpp FAIL


# *** LIKELY STL BUGS ***
# Not yet analyzed, likely STL bugs. Assertions and other runtime failures.
numerics\rand\rand.dis\rand.dist.bern\rand.dist.bern.bin\eval_param.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.bern\rand.dist.bern.bin\eval.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.bern\rand.dist.bern.geo\eval_param.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.bern\rand.dist.bern.geo\eval.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.bern\rand.dist.bern.negbin\eval_param.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.bern\rand.dist.bern.negbin\eval.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.norm\rand.dist.norm.cauchy\max.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.norm\rand.dist.norm.cauchy\min.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.norm\rand.dist.norm.chisq\max.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.norm\rand.dist.norm.chisq\min.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.norm\rand.dist.norm.f\max.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.norm\rand.dist.norm.lognormal\eval_param.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.norm\rand.dist.norm.lognormal\eval.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.norm\rand.dist.norm.lognormal\max.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.norm\rand.dist.norm.lognormal\min.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.norm\rand.dist.norm.normal\max.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.norm\rand.dist.norm.normal\min.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.norm\rand.dist.norm.t\eval_param.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.norm\rand.dist.norm.t\eval.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.norm\rand.dist.norm.t\max.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.norm\rand.dist.norm.t\min.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.pois\rand.dist.pois.exp\max.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.pois\rand.dist.pois.extreme\eval_param.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.pois\rand.dist.pois.extreme\eval.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.pois\rand.dist.pois.extreme\max.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.pois\rand.dist.pois.extreme\min.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.pois\rand.dist.pois.gamma\eq.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.pois\rand.dist.pois.gamma\eval_param.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.pois\rand.dist.pois.gamma\eval.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.pois\rand.dist.pois.gamma\max.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.pois\rand.dist.pois.gamma\min.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.pois\rand.dist.pois.poisson\eval_param.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.pois\rand.dist.pois.poisson\eval.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.pois\rand.dist.pois.weibull\max.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.pconst\ctor_init_func.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.pconst\ctor_iterator.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.pconst\eval.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.pconst\param_ctor_init_func.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.pconst\param_ctor_iterator.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.plinear\ctor_default.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.plinear\ctor_func.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.plinear\ctor_init_func.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.plinear\ctor_iterator.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.plinear\ctor_param.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.plinear\eval_param.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.plinear\eval.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.plinear\param_ctor_default.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.plinear\param_ctor_func.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.plinear\param_ctor_init_func.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.samp\rand.dist.samp.plinear\param_ctor_iterator.pass.cpp FAIL
numerics\rand\rand.dis\rand.dist.uni\rand.dist.uni.real\param_ctor.pass.cpp FAIL

# Not yet analyzed, likely STL bugs. Various assertions.
re\re.alg\re.alg.match\awk.pass.cpp FAIL
re\re.alg\re.alg.match\basic.pass.cpp FAIL
re\re.alg\re.alg.match\ecma.pass.cpp FAIL
re\re.alg\re.alg.match\extended.pass.cpp FAIL
re\re.alg\re.alg.search\awk.pass.cpp FAIL
re\re.alg\re.alg.search\basic.pass.cpp FAIL
re\re.alg\re.alg.search\ecma.pass.cpp FAIL
re\re.alg\re.alg.search\extended.pass.cpp FAIL
re\re.alg\re.alg.search\no_update_pos.pass.cpp FAIL
re\re.badexp\regex_error.pass.cpp FAIL
re\re.const\re.synopt\syntax_option_type.pass.cpp FAIL
re\re.grammar\excessive_brace_count.pass.cpp FAIL
re\re.regex\re.regex.construct\bad_backref.pass.cpp FAIL
re\re.regex\re.regex.construct\bad_escape.pass.cpp FAIL
re\re.regex\re.regex.construct\bad_range.pass.cpp FAIL
re\re.regex\re.regex.construct\default.pass.cpp FAIL
re\re.regex\re.regex.nonmemb\re.regex.nmswap\swap.pass.cpp FAIL
re\re.regex\re.regex.swap\swap.pass.cpp FAIL
re\re.traits\lookup_collatename.pass.cpp FAIL
re\re.traits\transform_primary.pass.cpp FAIL

# Not yet analyzed, likely STL bugs. Various assertions.
numerics\complex.number\complex.member.ops\divide_equal_complex.pass.cpp FAIL
numerics\complex.number\complex.ops\complex_divide_complex.pass.cpp FAIL
numerics\complex.number\complex.ops\complex_times_complex.pass.cpp FAIL
numerics\complex.number\complex.ops\scalar_divide_complex.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\acos.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\acosh.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\asin.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\asinh.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\atanh.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\cos.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\cosh.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\exp.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\log10.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\pow_complex_complex.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\pow_complex_scalar.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\pow_scalar_complex.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\sin.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\sinh.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\sqrt.pass.cpp FAIL
numerics\complex.number\complex.transcendentals\tanh.pass.cpp FAIL
numerics\complex.number\complex.value.ops\norm.pass.cpp FAIL
numerics\complex.number\complex.value.ops\polar.pass.cpp FAIL
numerics\complex.number\complex.value.ops\proj.pass.cpp FAIL

# Not yet analyzed, likely STL bugs. Many various assertions.
localization\locale.categories\category.ctype\facet.ctype.special\facet.ctype.char.statics\classic_table.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.money.get\locale.money.get.members\get_long_double_en_US.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.money.get\locale.money.get.members\get_long_double_fr_FR.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.money.get\locale.money.get.members\get_long_double_ru_RU.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.money.get\locale.money.get.members\get_long_double_zh_CN.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.money.get\locale.money.get.members\get_string_en_US.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.money.put\locale.money.put.members\put_long_double_en_US.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.money.put\locale.money.put.members\put_long_double_fr_FR.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.money.put\locale.money.put.members\put_long_double_ru_RU.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.money.put\locale.money.put.members\put_long_double_zh_CN.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.money.put\locale.money.put.members\put_string_en_US.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.moneypunct\locale.moneypunct.members\decimal_point.pass.cpp FAIL
localization\locale.categories\category.monetary\locale.moneypunct\locale.moneypunct.members\thousands_sep.pass.cpp FAIL
localization\locale.categories\category.numeric\locale.nm.put\facet.num.put.members\put_double.pass.cpp FAIL
localization\locale.categories\category.numeric\locale.nm.put\facet.num.put.members\put_long_double.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.get\locale.time.get.members\get_monthname_wide.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.get\locale.time.get.members\get_monthname.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.get\locale.time.get.members\get_one.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.get\locale.time.get.members\get_time_wide.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.get\locale.time.get.members\get_time.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.get\locale.time.get.members\get_weekday_wide.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.get\locale.time.get.members\get_weekday.pass.cpp FAIL
localization\locale.categories\category.time\locale.time.put\locale.time.put.members\put2.pass.cpp FAIL
localization\locale.stdcvt\codecvt_utf16_in.pass.cpp FAIL
localization\locale.stdcvt\codecvt_utf16_length.pass.cpp FAIL
localization\locale.stdcvt\codecvt_utf16_max_length.pass.cpp FAIL
localization\locale.stdcvt\codecvt_utf16_out.pass.cpp FAIL
localization\locale.stdcvt\codecvt_utf16.pass.cpp FAIL
localization\locale.stdcvt\codecvt_utf8_in.pass.cpp FAIL
localization\locale.stdcvt\codecvt_utf8_length.pass.cpp FAIL
localization\locale.stdcvt\codecvt_utf8_max_length.pass.cpp FAIL
localization\locale.stdcvt\codecvt_utf8_out.pass.cpp FAIL
localization\locale.stdcvt\codecvt_utf8_utf16_in.pass.cpp FAIL
localization\locale.stdcvt\codecvt_utf8_utf16_length.pass.cpp FAIL
localization\locale.stdcvt\codecvt_utf8_utf16_max_length.pass.cpp FAIL
localization\locale.stdcvt\codecvt_utf8_utf16_out.pass.cpp FAIL
localization\locale.stdcvt\codecvt_utf8.pass.cpp FAIL
localization\locales\locale.convenience\conversions\conversions.buffer\overflow.pass.cpp FAIL
localization\locales\locale.convenience\conversions\conversions.buffer\pbackfail.pass.cpp FAIL
localization\locales\locale.convenience\conversions\conversions.buffer\underflow.pass.cpp FAIL
localization\locales\locale.convenience\conversions\conversions.string\ctor_err_string.pass.cpp FAIL

# Not yet analyzed, likely STL bugs. Various assertions.
input.output\iostream.format\ext.manip\get_money.pass.cpp FAIL
input.output\iostream.format\ext.manip\put_money.pass.cpp FAIL
input.output\iostreams.base\ios\basic.ios.members\copyfmt.pass.cpp FAIL

# Not yet analyzed, likely STL bugs. Assertion failed: os.str() == a
numerics\rand\rand.adapt\rand.adapt.disc\ctor_result_type.pass.cpp FAIL
numerics\rand\rand.adapt\rand.adapt.disc\ctor_sseq.pass.cpp FAIL
numerics\rand\rand.adapt\rand.adapt.ibits\ctor_result_type.pass.cpp FAIL
numerics\rand\rand.adapt\rand.adapt.ibits\ctor_sseq.pass.cpp FAIL
numerics\rand\rand.eng\rand.eng.mers\ctor_result_type.pass.cpp FAIL
numerics\rand\rand.eng\rand.eng.mers\ctor_sseq.pass.cpp FAIL
numerics\rand\rand.eng\rand.eng.sub\ctor_result_type.pass.cpp FAIL
numerics\rand\rand.eng\rand.eng.sub\ctor_sseq.pass.cpp FAIL

# Not yet analyzed, likely STL bugs. Assertion failed: e1 == e2
numerics\rand\rand.adapt\rand.adapt.disc\io.pass.cpp FAIL
numerics\rand\rand.adapt\rand.adapt.ibits\io.pass.cpp FAIL
numerics\rand\rand.eng\rand.eng.sub\io.pass.cpp FAIL

# Likely STL bug: Looks like we shouldn't be using assignment.
thread\futures\futures.promise\set_rvalue.pass.cpp FAIL

# Possible STL bugs in pair and tuple.
utilities\tuple\tuple.tuple\tuple.cnstr\PR23256_constrain_UTypes_ctor.pass.cpp.0 FAIL
utilities\tuple\tuple.tuple\tuple.cnstr\PR31384.pass.cpp FAIL

# Likely STL bugs in mersenne_twister; also fails at runtime
# random(1186,26):  error: constexpr variable '_WMSK' must be initialized by a constant expression
#    static constexpr _Ty _WMSK = ~((~_Ty(0) << (_Wx - 1)) << 1);
#                         ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
numerics\rand\rand.eng\rand.eng.mers\ctor_sseq_all_zero.pass.cpp FAIL

# Bugs/questionable choices in codecvt<char(16|32)_t, char, mbstate_t>, which we probably will not fix since
# (1) they are deprecated, and (2) we don't want to break existing users.
localization\locale.categories\category.ctype\locale.codecvt\locale.codecvt.members\char16_t_max_length.pass.cpp FAIL
localization\locale.categories\category.ctype\locale.codecvt\locale.codecvt.members\char16_t_unshift.pass.cpp FAIL
localization\locale.categories\category.ctype\locale.codecvt\locale.codecvt.members\char32_t_encoding.pass.cpp FAIL
localization\locale.categories\category.ctype\locale.codecvt\locale.codecvt.members\char32_t_max_length.pass.cpp FAIL

# Likely STL bug in <chrono>: "result type of conditional expression is ambiguous"
utilities\time\time.duration\time.duration.alg\abs.pass.cpp FAIL


# *** NOT YET ANALYZED ***
# Not yet analyzed. Asserting about alloc_count.
thread\futures\futures.promise\alloc_ctor.pass.cpp FAIL
thread\futures\futures.promise\move_assign.pass.cpp FAIL
thread\futures\futures.promise\move_ctor.pass.cpp FAIL
thread\futures\futures.promise\swap.pass.cpp FAIL
thread\futures\futures.shared_future\dtor.pass.cpp FAIL
thread\futures\futures.unique_future\dtor.pass.cpp FAIL

# Not yet analyzed. libc++ seems to have a different opinion about what tuple_size<const void> should do.
utilities\tuple\tuple.tuple\tuple.helper\tuple_size_incomplete.pass.cpp FAIL
utilities\tuple\tuple.tuple\tuple.helper\tuple_size_structured_bindings.pass.cpp FAIL

# Not yet analyzed. Possibly testing nonstandard deduction guides.
containers\associative\map\map.cons\deduct_const.pass.cpp FAIL
containers\associative\multimap\multimap.cons\deduct_const.pass.cpp FAIL
containers\unord\unord.map\unord.map.cnstr\deduct_const.pass.cpp FAIL
containers\unord\unord.multimap\unord.multimap.cnstr\deduct.pass.cpp.0 FAIL
containers\unord\unord.multimap\unord.multimap.cnstr\deduct_const.pass.cpp FAIL
utilities\tuple\tuple.tuple\tuple.cnstr\deduct.pass.cpp.0 FAIL

# Not yet analyzed. Assertion failed: m1.empty()
containers\associative\map\map.cons\move_assign.pass.cpp FAIL
containers\associative\multimap\multimap.cons\move_assign.pass.cpp FAIL
containers\associative\multiset\multiset.cons\move_assign.pass.cpp FAIL
containers\associative\set\set.cons\move_assign.pass.cpp FAIL

# Not yet analyzed. Assertion failed: controller->check<Args&&...>()
containers\associative\map\map.modifiers\insert_and_emplace_allocator_requirements.pass.cpp FAIL
containers\associative\set\insert_and_emplace_allocator_requirements.pass.cpp FAIL
containers\unord\unord.map\unord.map.modifiers\insert_and_emplace_allocator_requirements.pass.cpp FAIL
containers\unord\unord.set\insert_and_emplace_allocator_requirements.pass.cpp FAIL

# Not yet analyzed. Assertion failed: f16_8.out(mbs, c16, c_c16p, c_c16p, c8, c8+4, c8p) == F32_8::ok
localization\locale.categories\category.ctype\locale.codecvt\locale.codecvt.members\utf_sanity_check.pass.cpp FAIL

# Not yet implemented in libcxx and marked as XFAIL
# TODO: Make a PR on libcxx to fix this
utilities/function.objects/func.search/func.search.bm/default.pass.cpp PASS
utilities/function.objects/func.search/func.search.bm/hash.pass.cpp PASS
utilities/function.objects/func.search/func.search.bm/hash.pred.pass.cpp PASS
utilities/function.objects/func.search/func.search.bm/pred.pass.cpp PASS
utilities/function.objects/func.search/func.search.bmh/default.pass.cpp PASS
utilities/function.objects/func.search/func.search.bmh/hash.pass.cpp PASS
utilities/function.objects/func.search/func.search.bmh/hash.pred.pass.cpp PASS
utilities/function.objects/func.search/func.search.bmh/pred.pass.cpp PASS
strings/c.strings/cuchar.pass.cpp PASS
