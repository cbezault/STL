# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

# *** ISSUES REPORTED/KNOWN UPSTREAM ***
# Non-Standard regex behavior.
# "It seems likely that the test is still non-conforming due to how libc++ handles the 'w' character class."
re\re.traits\lookup_classname.pass.cpp

# These tests are extremely slow, taking over 23 minutes to execute (in debug mode, non-optimized).
# They contain 10K^2 / 2 == 50M loops.
input.output\iostreams.base\ios.base\ios.base.storage\iword.pass.cpp
input.output\iostreams.base\ios.base\ios.base.storage\pword.pass.cpp

# "The behavior demonstrated in this test is not meant to be standard"
utilities\smartptr\unique.ptr\unique.ptr.class\unique.ptr.ctor\null.pass.cpp

# allocator<const T>.
utilities\memory\default.allocator\allocator.ctor.pass.cpp

# path::value_type is char assumptions
input.output\file.streams\fstreams\filebuf.members\open_path.pass.cpp
input.output\file.streams\fstreams\fstream.cons\path.pass.cpp
input.output\file.streams\fstreams\fstream.members\open_path.pass.cpp
input.output\file.streams\fstreams\ofstream.cons\path.pass.cpp
input.output\file.streams\fstreams\ofstream.members\open_path.pass.cpp

# This test is passing non-BidirectionalIterators to std::prev.
# LWG-3197 "std::prev should not require BidirectionalIterator" (New)
iterators\iterator.primitives\iterator.operations\prev.pass.cpp

# Itanium ABI assumptions that current_exception and rethrow_exception don't copy the exception object
language.support\support.exception\propagation\current_exception.pass.cpp
language.support\support.exception\propagation\make_exception_ptr.pass.cpp
language.support\support.exception\propagation\rethrow_exception.pass.cpp
language.support\support.exception\except.nested\rethrow_if_nested.pass.cpp

# Testing nonstandard behavior
utilities\template.bitset\bitset.cons\string_ctor.pass.cpp

# This test has undefined behavior under N4842 [basic.start.term]/6
thread\futures\futures.task\futures.task.members\dtor.pass.cpp

# libcxx is incorrect on what the type passed to allocator construct should be
# See https://reviews.llvm.org/D61364
containers\associative\map\map.modifiers\insert_and_emplace_allocator_requirements.pass.cpp
containers\associative\set\insert_and_emplace_allocator_requirements.pass.cpp
containers\unord\unord.map\unord.map.modifiers\insert_and_emplace_allocator_requirements.pass.cpp
containers\unord\unord.set\insert_and_emplace_allocator_requirements.pass.cpp

# libcxx doesn't yet implement P1423R3, so it expects an "old" value for __cpp_lib_char8_t
language.support\support.limits\support.limits.general\filesystem.version.pass.cpp
language.support\support.limits\support.limits.general\istream.version.pass.cpp
language.support\support.limits\support.limits.general\limits.version.pass.cpp
language.support\support.limits\support.limits.general\locale.version.pass.cpp
language.support\support.limits\support.limits.general\ostream.version.pass.cpp


# *** INTERACTIONS WITH CONTEST / C1XX THAT UPSTREAM LIKELY WON'T FIX ***
# Tracked by VSO-593630 "<filesystem> Enable libcxx filesystem tests"
# rapid-cxx-test.hpp uses pragma system_header
# test header filesystem_test_helper.hpp emits "error: "STATIC TESTS DISABLED""
# const_cast from const std::wstring& to std::string& is not allowed
input.output\filesystems\class.directory_entry\directory_entry.cons\copy.pass.cpp
input.output\filesystems\class.directory_entry\directory_entry.cons\copy_assign.pass.cpp
input.output\filesystems\class.directory_entry\directory_entry.cons\move.pass.cpp
input.output\filesystems\class.directory_entry\directory_entry.cons\move_assign.pass.cpp
input.output\filesystems\class.directory_entry\directory_entry.cons\path.pass.cpp
input.output\filesystems\class.directory_entry\directory_entry.mods\assign.pass.cpp
input.output\filesystems\class.directory_entry\directory_entry.mods\refresh.pass.cpp
input.output\filesystems\class.directory_entry\directory_entry.mods\replace_filename.pass.cpp
input.output\filesystems\class.directory_entry\directory_entry.obs\file_size.pass.cpp
input.output\filesystems\class.directory_entry\directory_entry.obs\file_type_obs.pass.cpp
input.output\filesystems\class.directory_entry\directory_entry.obs\hard_link_count.pass.cpp
input.output\filesystems\class.directory_entry\directory_entry.obs\last_write_time.pass.cpp
input.output\filesystems\class.directory_entry\directory_entry.obs\status.pass.cpp
input.output\filesystems\class.directory_entry\directory_entry.obs\symlink_status.pass.cpp
input.output\filesystems\class.directory_iterator\directory_iterator.members\copy.pass.cpp
input.output\filesystems\class.directory_iterator\directory_iterator.members\copy_assign.pass.cpp
input.output\filesystems\class.directory_iterator\directory_iterator.members\ctor.pass.cpp
input.output\filesystems\class.directory_iterator\directory_iterator.members\increment.pass.cpp
input.output\filesystems\class.directory_iterator\directory_iterator.members\move.pass.cpp
input.output\filesystems\class.directory_iterator\directory_iterator.members\move_assign.pass.cpp
input.output\filesystems\class.directory_iterator\directory_iterator.nonmembers\begin_end.pass.cpp
input.output\filesystems\class.path\synop.pass.cpp
input.output\filesystems\class.path\path.itr\iterator.pass.cpp
input.output\filesystems\class.path\path.member\path.append.pass.cpp
input.output\filesystems\class.path\path.member\path.compare.pass.cpp
input.output\filesystems\class.path\path.member\path.concat.pass.cpp
input.output\filesystems\class.path\path.member\path.assign\braced_init.pass.cpp
input.output\filesystems\class.path\path.member\path.assign\copy.pass.cpp
input.output\filesystems\class.path\path.member\path.assign\move.pass.cpp
input.output\filesystems\class.path\path.member\path.assign\source.pass.cpp
input.output\filesystems\class.path\path.member\path.construct\copy.pass.cpp
input.output\filesystems\class.path\path.member\path.construct\move.pass.cpp
input.output\filesystems\class.path\path.member\path.construct\source.pass.cpp
input.output\filesystems\class.path\path.member\path.decompose\path.decompose.pass.cpp
input.output\filesystems\class.path\path.member\path.gen\lexically_normal.pass.cpp
input.output\filesystems\class.path\path.member\path.gen\lexically_relative_and_proximate.pass.cpp
input.output\filesystems\class.path\path.member\path.generic.obs\generic_string_alloc.pass.cpp
input.output\filesystems\class.path\path.member\path.generic.obs\named_overloads.pass.cpp
input.output\filesystems\class.path\path.member\path.modifiers\clear.pass.cpp
input.output\filesystems\class.path\path.member\path.modifiers\make_preferred.pass.cpp
input.output\filesystems\class.path\path.member\path.modifiers\remove_filename.pass.cpp
input.output\filesystems\class.path\path.member\path.modifiers\replace_extension.pass.cpp
input.output\filesystems\class.path\path.member\path.modifiers\replace_filename.pass.cpp
input.output\filesystems\class.path\path.member\path.modifiers\swap.pass.cpp
input.output\filesystems\class.path\path.member\path.native.obs\c_str.pass.cpp
input.output\filesystems\class.path\path.member\path.native.obs\named_overloads.pass.cpp
input.output\filesystems\class.path\path.member\path.native.obs\native.pass.cpp
input.output\filesystems\class.path\path.member\path.native.obs\operator_string.pass.cpp
input.output\filesystems\class.path\path.member\path.native.obs\string_alloc.pass.cpp
input.output\filesystems\class.path\path.nonmember\append_op.pass.cpp
input.output\filesystems\class.path\path.nonmember\path.factory.pass.cpp
input.output\filesystems\class.path\path.nonmember\path.io.pass.cpp
input.output\filesystems\class.path\path.nonmember\path.io.unicode_bug.pass.cpp
input.output\filesystems\class.path\path.nonmember\swap.pass.cpp
input.output\filesystems\class.rec.dir.itr\rec.dir.itr.members\copy.pass.cpp
input.output\filesystems\class.rec.dir.itr\rec.dir.itr.members\copy_assign.pass.cpp
input.output\filesystems\class.rec.dir.itr\rec.dir.itr.members\ctor.pass.cpp
input.output\filesystems\class.rec.dir.itr\rec.dir.itr.members\depth.pass.cpp
input.output\filesystems\class.rec.dir.itr\rec.dir.itr.members\disable_recursion_pending.pass.cpp
input.output\filesystems\class.rec.dir.itr\rec.dir.itr.members\increment.pass.cpp
input.output\filesystems\class.rec.dir.itr\rec.dir.itr.members\move.pass.cpp
input.output\filesystems\class.rec.dir.itr\rec.dir.itr.members\move_assign.pass.cpp
input.output\filesystems\class.rec.dir.itr\rec.dir.itr.members\pop.pass.cpp
input.output\filesystems\class.rec.dir.itr\rec.dir.itr.members\recursion_pending.pass.cpp
input.output\filesystems\class.rec.dir.itr\rec.dir.itr.nonmembers\begin_end.pass.cpp
input.output\filesystems\fs.enum\enum.copy_options.pass.cpp
input.output\filesystems\fs.enum\enum.directory_options.pass.cpp
input.output\filesystems\fs.enum\enum.file_type.pass.cpp
input.output\filesystems\fs.enum\enum.path.format.pass.cpp
input.output\filesystems\fs.enum\enum.perms.pass.cpp
input.output\filesystems\fs.enum\enum.perm_options.pass.cpp
input.output\filesystems\fs.filesystem.synopsis\file_time_type.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.absolute\absolute.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.canonical\canonical.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.copy\copy.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.copy_file\copy_file.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.copy_file\copy_file_large.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.copy_symlink\copy_symlink.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.create_directories\create_directories.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.create_directory\create_directory.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.create_directory\create_directory_with_attributes.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.create_directory_symlink\create_directory_symlink.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.create_hard_link\create_hard_link.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.create_symlink\create_symlink.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.current_path\current_path.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.equivalent\equivalent.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.exists\exists.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.file_size\file_size.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.hard_lk_ct\hard_link_count.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.is_block_file\is_block_file.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.is_char_file\is_character_file.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.is_directory\is_directory.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.is_empty\is_empty.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.is_fifo\is_fifo.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.is_other\is_other.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.is_regular_file\is_regular_file.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.is_socket\is_socket.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.is_symlink\is_symlink.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.last_write_time\last_write_time.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.permissions\permissions.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.proximate\proximate.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.read_symlink\read_symlink.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.relative\relative.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.remove\remove.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.remove_all\remove_all.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.rename\rename.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.resize_file\resize_file.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.space\space.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.status\status.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.status_known\status_known.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.symlink_status\symlink_status.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.temp_dir_path\temp_directory_path.pass.cpp
input.output\filesystems\fs.op.funcs\fs.op.weakly_canonical\weakly_canonical.pass.cpp

# We need some way to turn on deprecations for tests asking for _LIBCPP_ENABLE_DEPRECATION_WARNINGS
utilities\function.objects\negators\binary_negate.depr_in_cxx17.fail.cpp
utilities\function.objects\negators\unary_negate.depr_in_cxx17.fail.cpp

# generate_feature_test_macro_components.py needs to learn about C1XX
language.support\support.limits\support.limits.general\new.version.pass.cpp
language.support\support.limits\support.limits.general\type_traits.version.pass.cpp
language.support\support.limits\support.limits.general\version.version.pass.cpp

# Contest does not understand .sh tests, which must be run specially
depr\depr.c.headers\stdint_h.sh.cpp
language.support\support.dynamic\new.delete\new.delete.array\new_size_align_nothrow.sh.cpp
language.support\support.dynamic\new.delete\new.delete.array\new_size_align.sh.cpp
language.support\support.dynamic\new.delete\new.delete.array\new_size_nothrow.sh.cpp
language.support\support.dynamic\new.delete\new.delete.array\new_size.sh.cpp
language.support\support.dynamic\new.delete\new.delete.array\sized_delete_array_fsizeddeallocation.sh.cpp
language.support\support.dynamic\new.delete\new.delete.single\new_size_align_nothrow.sh.cpp
language.support\support.dynamic\new.delete\new.delete.single\new_size_align.sh.cpp
language.support\support.dynamic\new.delete\new.delete.single\sized_delete_fsizeddeallocation.sh.cpp
thread\thread.condition\thread.condition.condvarany\wait_terminates.sh.cpp

# These tests set an allocator with a max_size() too small to default construct an unordered container
# (due to our minimum bucket size).
containers\unord\unord.map\max_size.pass.cpp
containers\unord\unord.multimap\max_size.pass.cpp
containers\unord\unord.multiset\max_size.pass.cpp
containers\unord\unord.set\max_size.pass.cpp

# Requires too great a template instantiation depth for C1XX.
utilities\tuple\tuple.tuple\tuple.apply\apply_large_arity.pass.cpp


# *** MISSING STL FEATURES ***
# C++20 P0019R8 "atomic_ref"
language.support\support.limits\support.limits.general\atomic.version.pass.cpp


# C++20 P0355R7 "<chrono> Calendars And Time Zones"
utilities\time\days.pass.cpp
utilities\time\months.pass.cpp
utilities\time\weeks.pass.cpp
utilities\time\years.pass.cpp
utilities\time\time.cal\time.cal.day\types.pass.cpp
utilities\time\time.cal\time.cal.day\time.cal.day.members\ctor.pass.cpp
utilities\time\time.cal\time.cal.day\time.cal.day.members\decrement.pass.cpp
utilities\time\time.cal\time.cal.day\time.cal.day.members\increment.pass.cpp
utilities\time\time.cal\time.cal.day\time.cal.day.members\ok.pass.cpp
utilities\time\time.cal\time.cal.day\time.cal.day.members\plus_minus_equal.pass.cpp
utilities\time\time.cal\time.cal.day\time.cal.day.nonmembers\comparisons.pass.cpp
utilities\time\time.cal\time.cal.day\time.cal.day.nonmembers\literals.pass.cpp
utilities\time\time.cal\time.cal.day\time.cal.day.nonmembers\minus.pass.cpp
utilities\time\time.cal\time.cal.day\time.cal.day.nonmembers\plus.pass.cpp
utilities\time\time.cal\time.cal.day\time.cal.day.nonmembers\streaming.pass.cpp
utilities\time\time.cal\time.cal.last\types.pass.cpp
utilities\time\time.cal\time.cal.md\types.pass.cpp
utilities\time\time.cal\time.cal.md\time.cal.md.members\ctor.pass.cpp
utilities\time\time.cal\time.cal.md\time.cal.md.members\day.pass.cpp
utilities\time\time.cal\time.cal.md\time.cal.md.members\month.pass.cpp
utilities\time\time.cal\time.cal.md\time.cal.md.members\ok.pass.cpp
utilities\time\time.cal\time.cal.md\time.cal.md.nonmembers\comparisons.pass.cpp
utilities\time\time.cal\time.cal.md\time.cal.md.nonmembers\streaming.pass.cpp
utilities\time\time.cal\time.cal.mdlast\comparisons.pass.cpp
utilities\time\time.cal\time.cal.mdlast\ctor.pass.cpp
utilities\time\time.cal\time.cal.mdlast\month.pass.cpp
utilities\time\time.cal\time.cal.mdlast\ok.pass.cpp
utilities\time\time.cal\time.cal.mdlast\streaming.pass.cpp
utilities\time\time.cal\time.cal.mdlast\types.pass.cpp
utilities\time\time.cal\time.cal.month\types.pass.cpp
utilities\time\time.cal\time.cal.month\time.cal.month.members\ctor.pass.cpp
utilities\time\time.cal\time.cal.month\time.cal.month.members\decrement.pass.cpp
utilities\time\time.cal\time.cal.month\time.cal.month.members\increment.pass.cpp
utilities\time\time.cal\time.cal.month\time.cal.month.members\ok.pass.cpp
utilities\time\time.cal\time.cal.month\time.cal.month.members\plus_minus_equal.pass.cpp
utilities\time\time.cal\time.cal.month\time.cal.month.nonmembers\comparisons.pass.cpp
utilities\time\time.cal\time.cal.month\time.cal.month.nonmembers\literals.pass.cpp
utilities\time\time.cal\time.cal.month\time.cal.month.nonmembers\minus.pass.cpp
utilities\time\time.cal\time.cal.month\time.cal.month.nonmembers\plus.pass.cpp
utilities\time\time.cal\time.cal.month\time.cal.month.nonmembers\streaming.pass.cpp
utilities\time\time.cal\time.cal.mwd\types.pass.cpp
utilities\time\time.cal\time.cal.mwd\time.cal.mwd.members\ctor.pass.cpp
utilities\time\time.cal\time.cal.mwd\time.cal.mwd.members\month.pass.cpp
utilities\time\time.cal\time.cal.mwd\time.cal.mwd.members\ok.pass.cpp
utilities\time\time.cal\time.cal.mwd\time.cal.mwd.members\weekday_indexed.pass.cpp
utilities\time\time.cal\time.cal.mwd\time.cal.mwd.nonmembers\comparisons.pass.cpp
utilities\time\time.cal\time.cal.mwd\time.cal.mwd.nonmembers\streaming.pass.cpp
utilities\time\time.cal\time.cal.mwdlast\types.pass.cpp
utilities\time\time.cal\time.cal.mwdlast\time.cal.mwdlast.members\ctor.pass.cpp
utilities\time\time.cal\time.cal.mwdlast\time.cal.mwdlast.members\month.pass.cpp
utilities\time\time.cal\time.cal.mwdlast\time.cal.mwdlast.members\ok.pass.cpp
utilities\time\time.cal\time.cal.mwdlast\time.cal.mwdlast.members\weekday_last.pass.cpp
utilities\time\time.cal\time.cal.mwdlast\time.cal.mwdlast.nonmembers\comparisons.pass.cpp
utilities\time\time.cal\time.cal.mwdlast\time.cal.mwdlast.nonmembers\streaming.pass.cpp
utilities\time\time.cal\time.cal.operators\month_day.pass.cpp
utilities\time\time.cal\time.cal.operators\month_day_last.pass.cpp
utilities\time\time.cal\time.cal.operators\month_weekday.pass.cpp
utilities\time\time.cal\time.cal.operators\month_weekday_last.pass.cpp
utilities\time\time.cal\time.cal.operators\year_month.pass.cpp
utilities\time\time.cal\time.cal.operators\year_month_day.pass.cpp
utilities\time\time.cal\time.cal.operators\year_month_day_last.pass.cpp
utilities\time\time.cal\time.cal.operators\year_month_weekday.pass.cpp
utilities\time\time.cal\time.cal.operators\year_month_weekday_last.pass.cpp
utilities\time\time.cal\time.cal.wdidx\types.pass.cpp
utilities\time\time.cal\time.cal.wdidx\time.cal.wdidx.members\ctor.pass.cpp
utilities\time\time.cal\time.cal.wdidx\time.cal.wdidx.members\index.pass.cpp
utilities\time\time.cal\time.cal.wdidx\time.cal.wdidx.members\ok.pass.cpp
utilities\time\time.cal\time.cal.wdidx\time.cal.wdidx.members\weekday.pass.cpp
utilities\time\time.cal\time.cal.wdidx\time.cal.wdidx.nonmembers\comparisons.pass.cpp
utilities\time\time.cal\time.cal.wdidx\time.cal.wdidx.nonmembers\streaming.pass.cpp
utilities\time\time.cal\time.cal.wdlast\types.pass.cpp
utilities\time\time.cal\time.cal.wdlast\time.cal.wdlast.members\ctor.pass.cpp
utilities\time\time.cal\time.cal.wdlast\time.cal.wdlast.members\ok.pass.cpp
utilities\time\time.cal\time.cal.wdlast\time.cal.wdlast.members\weekday.pass.cpp
utilities\time\time.cal\time.cal.wdlast\time.cal.wdlast.nonmembers\comparisons.pass.cpp
utilities\time\time.cal\time.cal.wdlast\time.cal.wdlast.nonmembers\streaming.pass.cpp
utilities\time\time.cal\time.cal.weekday\types.pass.cpp
utilities\time\time.cal\time.cal.weekday\time.cal.weekday.members\c_encoding.pass.cpp
utilities\time\time.cal\time.cal.weekday\time.cal.weekday.members\ctor.local_days.pass.cpp
utilities\time\time.cal\time.cal.weekday\time.cal.weekday.members\ctor.pass.cpp
utilities\time\time.cal\time.cal.weekday\time.cal.weekday.members\ctor.sys_days.pass.cpp
utilities\time\time.cal\time.cal.weekday\time.cal.weekday.members\decrement.pass.cpp
utilities\time\time.cal\time.cal.weekday\time.cal.weekday.members\increment.pass.cpp
utilities\time\time.cal\time.cal.weekday\time.cal.weekday.members\iso_encoding.pass.cpp
utilities\time\time.cal\time.cal.weekday\time.cal.weekday.members\ok.pass.cpp
utilities\time\time.cal\time.cal.weekday\time.cal.weekday.members\operator[].pass.cpp
utilities\time\time.cal\time.cal.weekday\time.cal.weekday.members\plus_minus_equal.pass.cpp
utilities\time\time.cal\time.cal.weekday\time.cal.weekday.nonmembers\comparisons.pass.cpp
utilities\time\time.cal\time.cal.weekday\time.cal.weekday.nonmembers\literals.pass.cpp
utilities\time\time.cal\time.cal.weekday\time.cal.weekday.nonmembers\minus.pass.cpp
utilities\time\time.cal\time.cal.weekday\time.cal.weekday.nonmembers\plus.pass.cpp
utilities\time\time.cal\time.cal.weekday\time.cal.weekday.nonmembers\streaming.pass.cpp
utilities\time\time.cal\time.cal.year\types.pass.cpp
utilities\time\time.cal\time.cal.year\time.cal.year.members\ctor.pass.cpp
utilities\time\time.cal\time.cal.year\time.cal.year.members\decrement.pass.cpp
utilities\time\time.cal\time.cal.year\time.cal.year.members\increment.pass.cpp
utilities\time\time.cal\time.cal.year\time.cal.year.members\is_leap.pass.cpp
utilities\time\time.cal\time.cal.year\time.cal.year.members\ok.pass.cpp
utilities\time\time.cal\time.cal.year\time.cal.year.members\plus_minus.pass.cpp
utilities\time\time.cal\time.cal.year\time.cal.year.members\plus_minus_equal.pass.cpp
utilities\time\time.cal\time.cal.year\time.cal.year.nonmembers\comparisons.pass.cpp
utilities\time\time.cal\time.cal.year\time.cal.year.nonmembers\literals.pass.cpp
utilities\time\time.cal\time.cal.year\time.cal.year.nonmembers\minus.pass.cpp
utilities\time\time.cal\time.cal.year\time.cal.year.nonmembers\plus.pass.cpp
utilities\time\time.cal\time.cal.year\time.cal.year.nonmembers\streaming.pass.cpp
utilities\time\time.cal\time.cal.ym\types.pass.cpp
utilities\time\time.cal\time.cal.ym\time.cal.ym.members\ctor.pass.cpp
utilities\time\time.cal\time.cal.ym\time.cal.ym.members\month.pass.cpp
utilities\time\time.cal\time.cal.ym\time.cal.ym.members\ok.pass.cpp
utilities\time\time.cal\time.cal.ym\time.cal.ym.members\plus_minus_equal_month.pass.cpp
utilities\time\time.cal\time.cal.ym\time.cal.ym.members\plus_minus_equal_year.pass.cpp
utilities\time\time.cal\time.cal.ym\time.cal.ym.members\year.pass.cpp
utilities\time\time.cal\time.cal.ym\time.cal.ym.nonmembers\comparisons.pass.cpp
utilities\time\time.cal\time.cal.ym\time.cal.ym.nonmembers\minus.pass.cpp
utilities\time\time.cal\time.cal.ym\time.cal.ym.nonmembers\plus.pass.cpp
utilities\time\time.cal\time.cal.ym\time.cal.ym.nonmembers\streaming.pass.cpp
utilities\time\time.cal\time.cal.ymd\types.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.members\ctor.local_days.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.members\ctor.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.members\ctor.sys_days.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.members\ctor.year_month_day_last.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.members\day.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.members\month.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.members\ok.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.members\op.local_days.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.members\op.sys_days.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.members\plus_minus_equal_month.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.members\plus_minus_equal_year.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.members\year.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.nonmembers\comparisons.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.nonmembers\minus.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.nonmembers\plus.pass.cpp
utilities\time\time.cal\time.cal.ymd\time.cal.ymd.nonmembers\streaming.pass.cpp
utilities\time\time.cal\time.cal.ymdlast\time.cal.ymdlast.members\ctor.pass.cpp
utilities\time\time.cal\time.cal.ymdlast\time.cal.ymdlast.members\day.pass.cpp
utilities\time\time.cal\time.cal.ymdlast\time.cal.ymdlast.members\month.pass.cpp
utilities\time\time.cal\time.cal.ymdlast\time.cal.ymdlast.members\month_day_last.pass.cpp
utilities\time\time.cal\time.cal.ymdlast\time.cal.ymdlast.members\ok.pass.cpp
utilities\time\time.cal\time.cal.ymdlast\time.cal.ymdlast.members\op_local_days.pass.cpp
utilities\time\time.cal\time.cal.ymdlast\time.cal.ymdlast.members\op_sys_days.pass.cpp
utilities\time\time.cal\time.cal.ymdlast\time.cal.ymdlast.members\plus_minus_equal_month.pass.cpp
utilities\time\time.cal\time.cal.ymdlast\time.cal.ymdlast.members\plus_minus_equal_year.pass.cpp
utilities\time\time.cal\time.cal.ymdlast\time.cal.ymdlast.members\year.pass.cpp
utilities\time\time.cal\time.cal.ymdlast\time.cal.ymdlast.nonmembers\comparisons.pass.cpp
utilities\time\time.cal\time.cal.ymdlast\time.cal.ymdlast.nonmembers\minus.pass.cpp
utilities\time\time.cal\time.cal.ymdlast\time.cal.ymdlast.nonmembers\plus.pass.cpp
utilities\time\time.cal\time.cal.ymdlast\time.cal.ymdlast.nonmembers\streaming.pass.cpp
utilities\time\time.cal\time.cal.ymwd\types.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.members\ctor.local_days.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.members\ctor.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.members\ctor.sys_days.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.members\index.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.members\month.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.members\ok.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.members\op.local_days.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.members\op.sys_days.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.members\plus_minus_equal_month.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.members\plus_minus_equal_year.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.members\weekday.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.members\weekday_indexed.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.members\year.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.nonmembers\comparisons.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.nonmembers\minus.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.nonmembers\plus.pass.cpp
utilities\time\time.cal\time.cal.ymwd\time.cal.ymwd.nonmembers\streaming.pass.cpp
utilities\time\time.cal\time.cal.ymwdlast\types.pass.cpp
utilities\time\time.cal\time.cal.ymwdlast\time.cal.ymwdlast.members\ctor.pass.cpp
utilities\time\time.cal\time.cal.ymwdlast\time.cal.ymwdlast.members\month.pass.cpp
utilities\time\time.cal\time.cal.ymwdlast\time.cal.ymwdlast.members\ok.pass.cpp
utilities\time\time.cal\time.cal.ymwdlast\time.cal.ymwdlast.members\op_local_days.pass.cpp
utilities\time\time.cal\time.cal.ymwdlast\time.cal.ymwdlast.members\op_sys_days.pass.cpp
utilities\time\time.cal\time.cal.ymwdlast\time.cal.ymwdlast.members\plus_minus_equal_month.pass.cpp
utilities\time\time.cal\time.cal.ymwdlast\time.cal.ymwdlast.members\plus_minus_equal_year.pass.cpp
utilities\time\time.cal\time.cal.ymwdlast\time.cal.ymwdlast.members\weekday.pass.cpp
utilities\time\time.cal\time.cal.ymwdlast\time.cal.ymwdlast.members\year.pass.cpp
utilities\time\time.cal\time.cal.ymwdlast\time.cal.ymwdlast.nonmembers\comparisons.pass.cpp
utilities\time\time.cal\time.cal.ymwdlast\time.cal.ymwdlast.nonmembers\minus.pass.cpp
utilities\time\time.cal\time.cal.ymwdlast\time.cal.ymwdlast.nonmembers\plus.pass.cpp
utilities\time\time.cal\time.cal.ymwdlast\time.cal.ymwdlast.nonmembers\streaming.pass.cpp
utilities\time\time.clock\time.clock.file\consistency.pass.cpp
utilities\time\time.clock\time.clock.file\file_time.pass.cpp
utilities\time\time.clock\time.clock.file\now.pass.cpp
utilities\time\time.clock\time.clock.file\rep_signed.pass.cpp
utilities\time\time.clock\time.clock.system\local_time.types.pass.cpp
utilities\time\time.clock\time.clock.system\sys.time.types.pass.cpp
utilities\time\time.duration\time.duration.literals\literals1.pass.cpp
utilities\time\time.hms\time.12\is_am.pass.cpp
utilities\time\time.hms\time.12\is_pm.pass.cpp
utilities\time\time.hms\time.12\make12.pass.cpp
utilities\time\time.hms\time.12\make24.pass.cpp
utilities\time\time.hms\time.hms.members\hours.pass.cpp
utilities\time\time.hms\time.hms.members\is_negative.pass.cpp
utilities\time\time.hms\time.hms.members\minutes.pass.cpp
utilities\time\time.hms\time.hms.members\precision.pass.cpp
utilities\time\time.hms\time.hms.members\precision_type.pass.cpp
utilities\time\time.hms\time.hms.members\seconds.pass.cpp
utilities\time\time.hms\time.hms.members\subseconds.pass.cpp
utilities\time\time.hms\time.hms.members\to_duration.pass.cpp
utilities\time\time.hms\time.hms.members\width.pass.cpp

# C++20 P0415R1 "constexpr For <complex> (Again)"
numerics\complex.number\cmplx.over\imag.pass.cpp
numerics\complex.number\cmplx.over\real.pass.cpp

# C++20 P0476R2 "<bit> bit_cast"
language.support\support.limits\support.limits.general\bit.version.pass.cpp

# C++20 P0553R4 "<bit> Rotating And Counting Functions"
numerics\bit\bitops.count\countl_one.pass.cpp
numerics\bit\bitops.count\countl_zero.pass.cpp
numerics\bit\bitops.count\countr_one.pass.cpp
numerics\bit\bitops.count\countr_zero.pass.cpp
numerics\bit\bitops.count\popcount.pass.cpp
numerics\bit\bitops.rot\rotl.pass.cpp
numerics\bit\bitops.rot\rotr.pass.cpp

# C++20 P0556R3 "<bit> ispow2(), ceil2(), floor2(), log2p1()"
numerics\bit\bit.pow.two\ceil2.pass.cpp
numerics\bit\bit.pow.two\floor2.pass.cpp
numerics\bit\bit.pow.two\ispow2.pass.cpp
numerics\bit\bit.pow.two\log2p1.pass.cpp

# C++20 P0608R3 "Improving variant's Converting Constructor/Assignment"
utilities\variant\variant.variant\variant.assign\conv.pass.cpp
utilities\variant\variant.variant\variant.assign\T.pass.cpp
utilities\variant\variant.variant\variant.ctor\conv.pass.cpp
utilities\variant\variant.variant\variant.ctor\T.pass.cpp

# C++20 P0768R1 "Library Support for the Spaceship (Comparison) Operator"
language.support\support.limits\support.limits.general\compare.version.pass.cpp

# C++20 P0811R2 "midpoint(), lerp()"
language.support\support.limits\support.limits.general\numeric.version.pass.cpp
numerics\c.math\c.math.lerp\c.math.lerp.pass.cpp

# C++20 P0896R4 "<ranges>"
language.support\support.limits\support.limits.general\algorithm.version.pass.cpp
language.support\support.limits\support.limits.general\functional.version.pass.cpp
language.support\support.limits\support.limits.general\iterator.version.pass.cpp
language.support\support.limits\support.limits.general\memory.version.pass.cpp

# C++20 P1023R0 "constexpr For std::array Comparisons"
containers\sequences\array\compare.pass.cpp

# C++20 P1032R1 "Miscellaneous constexpr"
language.support\support.limits\support.limits.general\array.version.pass.cpp
language.support\support.limits\support.limits.general\functional.version.pass.cpp
language.support\support.limits\support.limits.general\iterator.version.pass.cpp
language.support\support.limits\support.limits.general\string_view.version.pass.cpp
language.support\support.limits\support.limits.general\tuple.version.pass.cpp
language.support\support.limits\support.limits.general\utility.version.pass.cpp
strings\char.traits\char.traits.specializations\char.traits.specializations.char\assign3.pass.cpp
strings\char.traits\char.traits.specializations\char.traits.specializations.char\copy.pass.cpp
strings\char.traits\char.traits.specializations\char.traits.specializations.char\move.pass.cpp
strings\char.traits\char.traits.specializations\char.traits.specializations.char16_t\assign3.pass.cpp
strings\char.traits\char.traits.specializations\char.traits.specializations.char16_t\copy.pass.cpp
strings\char.traits\char.traits.specializations\char.traits.specializations.char16_t\move.pass.cpp
strings\char.traits\char.traits.specializations\char.traits.specializations.char32_t\assign3.pass.cpp
strings\char.traits\char.traits.specializations\char.traits.specializations.char32_t\copy.pass.cpp
strings\char.traits\char.traits.specializations\char.traits.specializations.char32_t\move.pass.cpp
strings\char.traits\char.traits.specializations\char.traits.specializations.char8_t\assign3.pass.cpp
strings\char.traits\char.traits.specializations\char.traits.specializations.char8_t\copy.pass.cpp
strings\char.traits\char.traits.specializations\char.traits.specializations.char8_t\move.pass.cpp
strings\char.traits\char.traits.specializations\char.traits.specializations.wchar.t\assign3.pass.cpp
strings\char.traits\char.traits.specializations\char.traits.specializations.wchar.t\copy.pass.cpp
strings\char.traits\char.traits.specializations\char.traits.specializations.wchar.t\move.pass.cpp


# *** MISSING COMPILER FEATURES ***
# C++20 P0722R3 "Efficient sized delete for variable sized classes"
language.support\support.dynamic\destroying_delete_t_declaration.pass.cpp
language.support\support.dynamic\destroying_delete_t.pass.cpp


# *** COMPILER BUGS ***
# Compiler bug: VSO-361805 "C1xx erroneously assumes that 'default' is a constexpr"
diagnostics\syserr\syserr.errcat\syserr.errcat.nonvirtuals\default_ctor.pass.cpp.0


# *** MISSING LWG ISSUE RESOLUTIONS ***
# LWG-2532 "Satisfying a promise at thread exit" (Open)
# WCFB02 implements the proposed resolution for this issue
thread\futures\futures.promise\set_exception_at_thread_exit.pass.cpp
thread\futures\futures.promise\set_lvalue_at_thread_exit.pass.cpp
thread\futures\futures.promise\set_rvalue_at_thread_exit.pass.cpp
thread\futures\futures.promise\set_value_at_thread_exit_const.pass.cpp
thread\futures\futures.promise\set_value_at_thread_exit_void.pass.cpp
thread\futures\futures.task\futures.task.members\make_ready_at_thread_exit.pass.cpp

# <concepts> hasn't been enabled for Clang yet.
iterators\iterator.primitives\iterator.traits\pointer.pass.cpp
iterators\iterator.primitives\std.iterator.tags\contiguous_iterator_tag.pass.cpp

# Clang 9 doesn't support comparison rewriting; implemented in Clang 10.
containers\views\span.iterators\begin.pass.cpp
containers\views\span.iterators\end.pass.cpp
containers\views\span.iterators\rbegin.pass.cpp
containers\views\span.iterators\rend.pass.cpp


# *** CLANG ISSUES, NOT YET ANALYZED ***
# Clang doesn't enable sized deallocation by default. Should we add -fsized-deallocation or do something else?
language.support\support.dynamic\new.delete\new.delete.array\sized_delete_array_fsizeddeallocation.sh.cpp
language.support\support.dynamic\new.delete\new.delete.array\sized_delete_array14.pass.cpp
language.support\support.dynamic\new.delete\new.delete.single\sized_delete_fsizeddeallocation.sh.cpp
language.support\support.dynamic\new.delete\new.delete.single\sized_delete14.pass.cpp

# Not yet analyzed. Clang apparently defines platform macros differently from C1XX.
language.support\support.limits\limits\numeric.limits.members\traps.pass.cpp


# *** LIKELY BOGUS TESTS ***
# Not yet analyzed, likely bogus tests. Appears to be timing assumptions.
thread\futures\futures.async\async.pass.cpp
thread\futures\futures.shared_future\wait_for.pass.cpp
thread\futures\futures.unique_future\wait_for.pass.cpp
thread\thread.condition\thread.condition.condvar\notify_all.pass.cpp
thread\thread.condition\thread.condition.condvar\notify_one.pass.cpp
thread\thread.condition\thread.condition.condvar\wait_for_pred.pass.cpp
thread\thread.condition\thread.condition.condvar\wait_for.pass.cpp
thread\thread.condition\thread.condition.condvar\wait_until_pred.pass.cpp
thread\thread.condition\thread.condition.condvar\wait_until.pass.cpp
thread\thread.condition\thread.condition.condvarany\notify_all.pass.cpp
thread\thread.condition\thread.condition.condvarany\notify_one.pass.cpp
thread\thread.condition\thread.condition.condvarany\wait_for_pred.pass.cpp
thread\thread.condition\thread.condition.condvarany\wait_for.pass.cpp
thread\thread.condition\thread.condition.condvarany\wait_until_pred.pass.cpp
thread\thread.condition\thread.condition.condvarany\wait_until.pass.cpp
thread\thread.mutex\thread.lock\thread.lock.guard\adopt_lock.pass.cpp
thread\thread.mutex\thread.lock\thread.lock.guard\mutex.pass.cpp
thread\thread.mutex\thread.lock\thread.lock.shared\thread.lock.shared.cons\mutex_duration.pass.cpp
thread\thread.mutex\thread.lock\thread.lock.shared\thread.lock.shared.cons\mutex_time_point.pass.cpp
thread\thread.mutex\thread.lock\thread.lock.shared\thread.lock.shared.cons\mutex_try_to_lock.pass.cpp
thread\thread.mutex\thread.lock\thread.lock.shared\thread.lock.shared.cons\mutex.pass.cpp
thread\thread.mutex\thread.lock\thread.lock.shared\thread.lock.shared.locking\lock.pass.cpp
thread\thread.mutex\thread.lock\thread.lock.unique\thread.lock.unique.cons\mutex_duration.pass.cpp
thread\thread.mutex\thread.lock\thread.lock.unique\thread.lock.unique.cons\mutex_time_point.pass.cpp
thread\thread.mutex\thread.lock\thread.lock.unique\thread.lock.unique.cons\mutex_try_to_lock.pass.cpp
thread\thread.mutex\thread.lock\thread.lock.unique\thread.lock.unique.cons\mutex.pass.cpp
thread\thread.mutex\thread.lock\thread.lock.unique\thread.lock.unique.locking\lock.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.mutex.requirements.mutex\thread.mutex.class\lock.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.mutex.requirements.mutex\thread.mutex.class\try_lock.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.mutex.requirements.mutex\thread.mutex.recursive\lock.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.mutex.requirements.mutex\thread.mutex.recursive\try_lock.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.shared_mutex.requirements\thread.shared_mutex.class\lock_shared.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.shared_mutex.requirements\thread.shared_mutex.class\lock.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.shared_mutex.requirements\thread.shared_mutex.class\try_lock_shared.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.shared_mutex.requirements\thread.shared_mutex.class\try_lock.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.sharedtimedmutex.requirements\thread.sharedtimedmutex.class\lock_shared.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.sharedtimedmutex.requirements\thread.sharedtimedmutex.class\lock.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.sharedtimedmutex.requirements\thread.sharedtimedmutex.class\try_lock_for.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.sharedtimedmutex.requirements\thread.sharedtimedmutex.class\try_lock_shared_for.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.sharedtimedmutex.requirements\thread.sharedtimedmutex.class\try_lock_shared_until.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.sharedtimedmutex.requirements\thread.sharedtimedmutex.class\try_lock_shared.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.sharedtimedmutex.requirements\thread.sharedtimedmutex.class\try_lock_until.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.sharedtimedmutex.requirements\thread.sharedtimedmutex.class\try_lock.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.timedmutex.requirements\thread.timedmutex.class\lock.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.timedmutex.requirements\thread.timedmutex.class\try_lock_for.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.timedmutex.requirements\thread.timedmutex.class\try_lock_until.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.timedmutex.requirements\thread.timedmutex.class\try_lock.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.timedmutex.requirements\thread.timedmutex.recursive\lock.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.timedmutex.requirements\thread.timedmutex.recursive\try_lock_for.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.timedmutex.requirements\thread.timedmutex.recursive\try_lock_until.pass.cpp
thread\thread.mutex\thread.mutex.requirements\thread.timedmutex.requirements\thread.timedmutex.recursive\try_lock.pass.cpp
thread\thread.threads\thread.thread.class\thread.thread.destr\dtor.pass.cpp
thread\thread.threads\thread.thread.class\thread.thread.member\detach.pass.cpp
thread\thread.threads\thread.thread.this\sleep_until.pass.cpp

# Not yet analyzed, likely bogus tests. Various assertions, probably POSIX assumptions.
diagnostics\syserr\syserr.compare\eq_error_code_error_code.pass.cpp
diagnostics\syserr\syserr.errcat\syserr.errcat.derived\message.pass.cpp
diagnostics\syserr\syserr.errcat\syserr.errcat.objects\system_category.pass.cpp
diagnostics\syserr\syserr.syserr\syserr.syserr.members\ctor_error_code_const_char_pointer.pass.cpp
diagnostics\syserr\syserr.syserr\syserr.syserr.members\ctor_error_code_string.pass.cpp
diagnostics\syserr\syserr.syserr\syserr.syserr.members\ctor_error_code.pass.cpp
diagnostics\syserr\syserr.syserr\syserr.syserr.members\ctor_int_error_category_const_char_pointer.pass.cpp
diagnostics\syserr\syserr.syserr\syserr.syserr.members\ctor_int_error_category_string.pass.cpp
diagnostics\syserr\syserr.syserr\syserr.syserr.members\ctor_int_error_category.pass.cpp

# libc++ disagrees with libstdc++ and MSVC++ on whether setstate calls during I/O that throw set failbit; see open issue LWG-2349
input.output\iostream.format\input.streams\istream.unformatted\get_pointer_size_chart.pass.cpp
input.output\iostream.format\input.streams\istream.unformatted\get_pointer_size.pass.cpp

# Sensitive to implementation details. Assertion failed: test_alloc_base::count == expected_num_allocs
containers\container.requirements\container.requirements.general\allocator_move.pass.cpp

# Tests std::weak_equality/strong_equality which were removed by P1959R0
language.support\cmp\cmp.common\common_comparison_category.pass.cpp
language.support\cmp\cmp.partialord\partialord.pass.cpp
language.support\cmp\cmp.strongeq\cmp.strongeq.pass.cpp
language.support\cmp\cmp.strongord\strongord.pass.cpp
language.support\cmp\cmp.weakeq\cmp.weakeq.pass.cpp
language.support\cmp\cmp.weakord\weakord.pass.cpp
